---
# https://taskfile.dev
# yaml-language-server: $schema=https://taskfile.dev/schema.json

version: '3'

vars:
  PROJNAME:
    sh: cargo metadata --format-version=1 --no-deps | jq -r '.packages[0].name'
  # default profile
  PROFILE: debug
  # default target
  TARGET:
    sh: 'rustc --version --verbose | rg -r "" "^host: "'

includes:
  tool:
    taskfile: tool.task.yml
    internal: true

tasks:
  default:
    desc: '{{.TASK}}'
    silent: true
    cmds:
    - task: build

  build:
    internal: true
    dir: '{{.ROOT_DIR}}'
    deps:
    - task: tool:aqua:tag:build
      silent: true
    - task: tool:rustup:target:{{.TARGET}}
      silent: true
    sources:
    - 'Cargo.toml'
    - 'Cargo.lock'
    - 'src/**/*.rs'
    generates:
    - target/{{.TARGET}}/{{.PROFILE}}/{{.PROJNAME}}
    vars:
      TARGET: '{{.TARGET}}'
      PROFILE: '{{.PROFILE}}'
      BUILD_ARGS: >-
        {{if eq .PROFILE "release"}}--release{{end}}
        --target={{.TARGET}}.2.17
    label: 'build:{{.PROFILE}}:{{.TARGET}}'
    cmds:
    - mold -run cargo zigbuild {{.BUILD_ARGS}}

  debug:
    desc: '{{.TASK}}'
    cmds:
    - task: build
      vars:
        PROFILE: debug
        TARGET: '{{.TARGET}}'

  debug:*:
    desc: '{{.TASK}}'
    cmds:
    - task: build
      vars:
        PROFILE: debug
        TARGET: '{{index .MATCH 0}}'

  release:
    desc: '{{.TASK}}'
    cmds:
    - task: build
      vars:
        PROFILE: release
        TARGET: '{{.TARGET}}'
    - task: cosign
      vars:
        PROFILE: release
        TARGET: '{{.TARGET}}'

  release:*:
    desc: '{{.TASK}}'
    cmds:
    - task: build
      vars:
        PROFILE: release
        TARGET: '{{index .MATCH 0}}'
    - task: cosign
      vars:
        PROFILE: release
        TARGET: '{{index .MATCH 0}}'

  sha256sum:
    desc: '{{.TASK}}'
    label: sha256sum:{{.PROFILE}}:{{.TARGET}}
    dir: '{{.ROOT_DIR}}/target/{{.TARGET}}/{{.PROFILE}}'
    deps:
    - task: tool:aqua:tag:coreutils
    - task: build
      vars:
        PROFILE: '{{.PROFILE}}'
        TARGET: '{{.TARGET}}'
    sources:
    - '{{.PROJNAME}}'
    generates:
    - '{{.PROJNAME}}.sha256sum'
    cmds:
    - coreutils sha256sum "{{.PROJNAME}}" > "{{.PROJNAME}}.sha256sum"

  cosign:
    desc: '{{.TASK}}'
    label: cosign:{{.PROFILE}}:{{.TARGET}}
    dir: '{{.ROOT_DIR}}/target/{{.TARGET}}/{{.PROFILE}}'
    deps:
    - task: tool:aqua:tag:cosign
    - task: build
      vars:
        PROFILE: '{{.PROFILE}}'
        TARGET: '{{.TARGET}}'
    sources:
    - '{{.PROJNAME}}'
    generates:
    - '{{.PROJNAME}}.cert'
    - '{{.PROJNAME}}.sig'
    cmds:
    - >-
      cosign sign-blob {{.PROJNAME}}
      -y
      --output-certificate {{.PROJNAME}}.cert
      --output-signature {{.PROJNAME}}.sig
