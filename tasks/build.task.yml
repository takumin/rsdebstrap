---
# https://taskfile.dev
# yaml-language-server: $schema=https://taskfile.dev/schema.json

version: '3'

vars:
  PROJNAME:
    sh: cargo metadata --format-version=1 --no-deps | jq -r '.packages[0].name'
  # default profile
  PROFILE: '{{env "BUILD_PROFILE" | default "debug"}}'
  # default target
  TARGET: '{{env "BUILD_TARGET" | default "x86_64-unknown-linux-gnu"}}'
  # target list
  MATRIX_TARGETS:
  - x86_64-unknown-linux-gnu
  - x86_64-unknown-linux-musl
  - i686-unknown-linux-gnu
  - i686-unknown-linux-musl
  - aarch64-unknown-linux-gnu
  - aarch64-unknown-linux-musl
  - armv7-unknown-linux-gnueabihf
  - armv7-unknown-linux-musleabihf
  - riscv64gc-unknown-linux-gnu
  - riscv64gc-unknown-linux-musl

includes:
  setup:
    taskfile: setup.task.yml
    internal: true

tasks:
  default:
    desc: '{{.TASK}}'
    silent: true
    cmds:
    - task: build
    - task: sha256sum

  matrix:
    desc: '{{.TASK}}'
    silent: true
    cmds:
    - echo '{{ .MATRIX_TARGETS | toJson }}' | jq -cM -f scripts/build-matrix.jq

  build:
    desc: '{{.TASK}}'
    dir: '{{.ROOT_DIR}}'
    label: build:{{.PROFILE}}:{{.TARGET}}
    deps:
    - task: setup:build
      vars:
        PROFILE: '{{.PROFILE}}'
        TARGET: '{{.TARGET}}'
    sources:
    - 'Cargo.toml'
    - 'Cargo.lock'
    - 'src/**/*.rs'
    generates:
    - target/{{.TARGET}}/{{.PROFILE}}/{{.PROJNAME}}
    - dist/{{.PROJNAME}}-{{.PROFILE}}-{{.TARGET}}
    vars:
      MOLD_RUN: '{{if contains "-linux-" .TARGET}}mold -run{{end}}'
      PROFILE_ARG: '{{if eq .PROFILE "release"}}--release{{end}}'
      TARGET_ARG: '--target={{.TARGET}}{{if contains "-linux-" .TARGET}}.2.17{{end}}'
    cmds:
    - '{{.MOLD_RUN}} cargo zigbuild --frozen {{.PROFILE_ARG}} {{.TARGET_ARG}}'
    - mkdir -p dist
    - cp target/{{.TARGET}}/{{.PROFILE}}/{{.PROJNAME}} dist/{{.PROJNAME}}-{{.PROFILE}}-{{.TARGET}}

  sha256sum:
    desc: '{{.TASK}}'
    label: sha256sum:{{.PROFILE}}:{{.TARGET}}
    dir: '{{.ROOT_DIR}}/dist'
    deps:
    - task: setup:build
      vars:
        PROFILE: '{{.PROFILE}}'
        TARGET: '{{.TARGET}}'
    - task: build
      vars:
        PROFILE: '{{.PROFILE}}'
        TARGET: '{{.TARGET}}'
    vars:
      ARTIFACT: '{{.PROJNAME}}-{{.PROFILE}}-{{.TARGET}}'
    sources:
    - '{{.ARTIFACT}}'
    generates:
    - '{{.ARTIFACT}}.sha256sum'
    cmds:
    - coreutils sha256sum "{{.ARTIFACT}}" > "{{.ARTIFACT}}.sha256sum"

  sha256sum:verify:
    desc: '{{.TASK}}'
    label: sha256sum:verify:{{.PROFILE}}:{{.TARGET}}
    dir: '{{.ROOT_DIR}}/dist'
    deps:
    - task: setup:build
      vars:
        PROFILE: '{{.PROFILE}}'
        TARGET: '{{.TARGET}}'
    - task: sha256sum
      vars:
        PROFILE: '{{.PROFILE}}'
        TARGET: '{{.TARGET}}'
    vars:
      ARTIFACT: '{{.PROJNAME}}-{{.PROFILE}}-{{.TARGET}}'
    cmds:
    - coreutils sha256sum -c "{{.ARTIFACT}}.sha256sum"

  cosign:
    desc: '{{.TASK}}'
    label: cosign:{{.PROFILE}}:{{.TARGET}}
    dir: '{{.ROOT_DIR}}/dist'
    deps:
    - task: setup:build
      vars:
        PROFILE: '{{.PROFILE}}'
        TARGET: '{{.TARGET}}'
    - task: build
      vars:
        PROFILE: '{{.PROFILE}}'
        TARGET: '{{.TARGET}}'
    vars:
      ARTIFACT: '{{.PROJNAME}}-{{.PROFILE}}-{{.TARGET}}'
    sources:
    - '{{.ARTIFACT}}'
    generates:
    - '{{.ARTIFACT}}.cert'
    - '{{.ARTIFACT}}.sig'
    cmds:
    - >-
      cosign sign-blob {{.ARTIFACT}}
      -y
      --output-certificate {{.ARTIFACT}}.cert
      --output-signature {{.ARTIFACT}}.sig
